### Documentaci√≥n T√©cnica (Docstrings)

#### `remove_urls`
```python
def remove_urls(text):
    """
    Elimina las URL de un texto.

    Chain of Thought:
    1. La funci√≥n `remove_urls` toma un par√°metro, `text`, que es una cadena de texto.
    2. La funci√≥n utiliza un patr√≥n de expresiones regulares para identificar y eliminar las URL del texto.
    3. Las URL pueden ser de diferentes formas, como `https://www.example.com` o `www.example.com`, por lo que el patr√≥n de expresiones regulares considera ambos casos.

    Args:
        text (str): El texto del que se eliminar√°n las URL.

    Returns:
        str: El texto con las URL eliminadas.

    Ejemplo:
        >>> remove_urls("Este es un texto con una URL: https://www.example.com")
        'Este es un texto con una URL: '
    """

    url_pattern = re.compile(r'https?://\S+|www\.\S+')
    return url_pattern.sub(r'', text)
```

#### `remove_emoji`
```python
def remove_emoji(text):
    """
    Elimina los emojis de un texto.

    Chain of Thought:
    1. La funci√≥n `remove_emoji` toma un par√°metro, `text`, que es una cadena de texto.
    2. La funci√≥n utiliza un patr√≥n de expresiones regulares para identificar y eliminar los emojis del texto.
    3. Los emojis pueden ser de diferentes formas, como `üòÄ`, `‚ù§Ô∏è` o `üëç`, por lo que el patr√≥n de expresiones regulares considera diferentes rangos de c√≥digos Unicode.

    Args:
        text (str): El texto del que se eliminar√°n los emojis.

    Returns:
        str: El texto con los emojis eliminados.

    Ejemplo:
        >>> remove_emoji("Este es un texto con un emoji: üòÄ")
        'Este es un texto con un emoji: '
    """

    emoji_pattern = re.compile("["
                           u"üòÄ-üôè"  # emoticons
                           u"üåÄ-üóø"  # symbols & pictographs
                           u"üöÄ-üõø"  # transport & map symbols
                           u"üá†-üáø"  # flags (iOS)
                           u"‚úÇ-‚û∞"
                           u"‚ìÇ-üâë"
                           "]+", flags=re.UNICODE)
    return emoji_pattern.sub(r'', text)
```

#### `remove_stopwords`
```python
def remove_stopwords(text, stopwords):
    """
    Elimina las stopwords de un texto.

    Chain of Thought:
    1. La funci√≥n `remove_stopwords` toma dos par√°metros: `text`, que es una cadena de texto, y `stopwords`, que es una lista de stopwords.
    2. La funci√≥n filtra el texto para eliminar cualquier palabra que est√© en la lista de stopwords.
    3. Las stopwords son palabras comunes que no aportan mucho significado al texto, como "el", "la", "de", "a".

    Args:
        text (str): El texto del que se eliminar√°n las stopwords.
        stopwords (list): Una lista de stopwords.

    Returns:
        list: Una lista de palabras en el texto que no son stopwords.

    Ejemplo:
        >>> remove_stopwords("Este es un texto con stopwords", ["el", "la", "de"])
        ['Este', 'es', 'un', 'texto', 'con', 'stopwords']
    """

    output= [i for i in text if i not in stopwords]
    return output
```

#### `stemming_es`
```python
def stemming_es(token):
    """
    Realiza stemming de una palabra en espa√±ol.

    Chain of Thought:
    1. La funci√≥n `stemming_es` toma un par√°metro, `token`, que es una palabra en espa√±ol.
    2. La funci√≥n utiliza el stemmer de Snowball para el idioma espa√±ol para reducir la palabra a su ra√≠z.
    3. El stemming es el proceso de eliminar sufijos y prefijos de una palabra para obtener su forma b√°sica.

    Args:
        token (str): La palabra en espa√±ol a la que se le aplicar√° el stemming.

    Returns:
        str: La palabra en espa√±ol con stemming aplicado.

    Ejemplo:
        >>> stemming_es("corriendo")
        'corr'
    """

    es_stemmer = SnowballStemmer('spanish')
    return es_stemmer.stem(token)
```

#### `stemming_eng`
```python
def stemming_eng(text):
    """
    Realiza stemming de un texto en ingl√©s.

    Chain of Thought:
    1. La funci√≥n `stemming_eng` toma un par√°metro, `text`, que es una lista de palabras en ingl√©s.
    2. La funci√≥n utiliza el stemmer de Porter para el idioma ingl√©s para reducir cada palabra a su ra√≠z.
    3. El stemming es el proceso de eliminar sufijos y prefijos de una palabra para obtener su forma b√°sica.

    Args:
        text (list): Una lista de palabras en ingl√©s a las que se les aplicar√° el stemming.

    Returns:
        list: Una lista de palabras en ingl√©s con stemming aplicado.

    Ejemplo:
        >>> stemming_eng(['running', 'quickly', 'read'])
        ['run', 'quick', 'read']
    """

    eng_stemmer = PorterStemmer()
    stem_text = [eng_stemmer.stem(word) for word in text]
    return stem_text
```

#### `lemmatizer_eng`
```python
def lemmatizer_eng(text, wordnet_lemmatizer):
    """
    Realiza lematizaci√≥n de un texto en ingl√©s.

    Chain of Thought:
    1. La funci√≥n `lemmatizer_eng` toma dos par√°metros: `text`, que es una lista de palabras en ingl√©s, y `wordnet_lemmatizer`, que es una instancia del lematizador de WordNet.
    2. La funci√≥n utiliza el lematizador de WordNet para reducir cada palabra a su forma base, teniendo en cuenta el contexto.
    3. La lematizaci√≥n es el proceso de reducir una palabra a su forma base, teniendo en cuenta su significado y parte del discurso.

    Args:
        text (list): Una lista de palabras en ingl√©s a las que se les aplicar√° el lematizador.
        wordnet_lemmatizer (WordNetLemmatizer): Una instancia del lematizador de WordNet.

    Returns:
        list: Una lista de palabras en ingl√©s con lematizaci√≥n aplicada.

    Ejemplo:
        >>> lemmatizer_eng(['running', 'quickly', 'read'], WordNetLemmatizer())
        ['run', 'quickly', 'read']
    """

    lemm_text = [wordnet_lemmatizer.lemmatize(word) for word in text]
    return lemm_text
```

### Documentaci√≥n para Usuarios No T√©cnicos

**¬°Procesamiento de Texto Simplificado!**

Este c√≥digo te ayuda a limpiar y transformar textos para hacerlos m√°s √∫tiles para el an√°lisis.

**¬øQu√© hace?**

1. **Elimina URL y emojis**: Elimina enlaces y caritas sonrientes para enfocarse en el contenido real.
2. **Elimina Stopwords (espa√±ol)**: Quita palabras comunes como "la", "de", "que" que no agregan mucha informaci√≥n.
3. **Stemming (espa√±ol e ingl√©s)**: Reduce las palabras a su ra√≠z, como "corriendo" a "corr".
4. **Lematizaci√≥n (ingl√©s)**: Identifica la forma base de las palabras seg√∫n su contexto, como "running" a "run".

**¬°Resultado!**

Un texto m√°s limpio y f√°cil de analizar, listo para descubrir patrones y obtener informaci√≥n valiosa. üßê